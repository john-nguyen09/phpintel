File {
  symbols: 
   [ Property {
       name: '$property1',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 1 },
       type: 'bool' },
     Property {
       name: '$property2',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 1 } },
     Property {
       name: '$protected1',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 2 } },
     Property {
       name: '$protected2',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 2 } },
     Property {
       name: '$protected3',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 2 } },
     Property {
       name: '$protectedProperty1',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 2 } },
     Property {
       name: '$privateProperty1',
       expression: Expression { realSymbol: null },
       modifier: SymbolModifier { modifier: 0, visibility: 4 } },
     Method {
       name: '__construct',
       parameters: [ [Object] ],
       scopeVar: Scope { variables: [Object] },
       typeAggregate: TypeAggregate { _types: [] },
       modifier: null },
     Method {
       name: 'method1',
       parameters: [],
       scopeVar: Scope { variables: {} },
       typeAggregate: TypeAggregate { _types: [Array] },
       modifier: SymbolModifier { modifier: 0, visibility: 1 } },
     Method {
       name: 'method2',
       parameters: [],
       scopeVar: Scope { variables: {} },
       typeAggregate: TypeAggregate { _types: [] },
       modifier: SymbolModifier { modifier: 0, visibility: 1 } },
     Method {
       name: 'method3',
       parameters: [],
       scopeVar: Scope { variables: {} },
       typeAggregate: TypeAggregate { _types: [Array] },
       modifier: SymbolModifier { modifier: 0, visibility: 1 } },
     Method {
       name: 'method4',
       parameters: [],
       scopeVar: Scope { variables: {} },
       typeAggregate: TypeAggregate { _types: [Array] },
       modifier: SymbolModifier { modifier: 0, visibility: 1 } },
     Method {
       name: 'protectedMethod1',
       parameters: [ [Object] ],
       scopeVar: Scope { variables: [Object] },
       typeAggregate: TypeAggregate { _types: [] },
       modifier: SymbolModifier { modifier: 0, visibility: 2 } },
     Method {
       name: 'privateMethod1',
       parameters: [ [Object], [Object], [Object], [Object] ],
       scopeVar: Scope { variables: [Object] },
       typeAggregate: TypeAggregate { _types: [Array] },
       modifier: SymbolModifier { modifier: 0, visibility: 4 } },
     Class {
       name: 'ClassWithMethod',
       extend: '',
       implements: [],
       modifier: SymbolModifier { modifier: 0 },
       traits: [],
       location: 
        Location {
          uri: 'file:///C:/Users/snowk/Development/phpintel/test/case/class_methods.php',
          range: [Object] } } ] }