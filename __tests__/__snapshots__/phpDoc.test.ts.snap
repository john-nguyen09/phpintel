// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`phpDoc snapshot of phpDocs 1`] = `
PhpDocument {
  "classConstants": Array [
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 21,
            "line": 2,
            "offset": 50,
          },
          "start": Position {
            "character": 10,
            "line": 2,
            "offset": 39,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "CONST1",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
    },
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 19,
            "line": 3,
            "offset": 71,
          },
          "start": Position {
            "character": 10,
            "line": 3,
            "offset": 62,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "PI",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
    },
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 34,
            "line": 4,
            "offset": 107,
          },
          "start": Position {
            "character": 10,
            "line": 4,
            "offset": 83,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "STATUS_ACTIVE",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
    },
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 38,
            "line": 5,
            "offset": 147,
          },
          "start": Position {
            "character": 10,
            "line": 5,
            "offset": 119,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "STATUS_INACTIVE",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
    },
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 26,
            "line": 6,
            "offset": 175,
          },
          "start": Position {
            "character": 10,
            "line": 6,
            "offset": 159,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "IS_ACTIVE",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
    },
  ],
  "classes": Array [
    Class {
      "extend": null,
      "implements": Array [],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 1,
            "line": 7,
            "offset": 178,
          },
          "start": Position {
            "character": 0,
            "line": 1,
            "offset": 6,
          },
        },
        "relativeUri": "case/class_constants.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithConst",
      },
      "traits": Array [],
    },
  ],
  "constants": Array [],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {},
  },
  "methods": Array [],
  "properties": Array [],
}
`;

exports[`phpDoc snapshot of phpDocs 2`] = `
PhpDocument {
  "classConstants": Array [],
  "classes": Array [
    Class {
      "extend": null,
      "implements": Array [],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 1,
            "line": 55,
            "offset": 1074,
          },
          "start": Position {
            "character": 0,
            "line": 2,
            "offset": 7,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
      "traits": Array [],
    },
  ],
  "constants": Array [],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {},
  },
  "methods": Array [
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 27,
            "offset": 607,
          },
          "start": Position {
            "character": 4,
            "line": 25,
            "offset": 560,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": undefined,
      "name": TypeName {
        "isArray": false,
        "name": "__construct",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 31,
            "offset": 667,
          },
          "start": Position {
            "character": 4,
            "line": 29,
            "offset": 613,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "method1",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 38,
            "offset": 773,
          },
          "start": Position {
            "character": 4,
            "line": 33,
            "offset": 673,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "method2",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 42,
            "offset": 830,
          },
          "start": Position {
            "character": 4,
            "line": 40,
            "offset": 779,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "method3",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 46,
            "offset": 890,
          },
          "start": Position {
            "character": 4,
            "line": 44,
            "offset": 836,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "method4",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 50,
            "offset": 953,
          },
          "start": Position {
            "character": 4,
            "line": 48,
            "offset": 896,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 2,
      },
      "name": TypeName {
        "isArray": false,
        "name": "protectedMethod1",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 54,
            "offset": 1072,
          },
          "start": Position {
            "character": 4,
            "line": 52,
            "offset": 959,
          },
        },
        "relativeUri": "case/class_methods.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 4,
      },
      "name": TypeName {
        "isArray": false,
        "name": "privateMethod1",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\ClassWithMethod",
      },
    },
  ],
  "properties": Array [
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$property1",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$property2",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 2,
      },
      "name": "$protected1",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 2,
      },
      "name": "$protected2",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 2,
      },
      "name": "$protected3",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 2,
      },
      "name": "$protectedProperty1",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 4,
      },
      "name": "$privateProperty1",
    },
  ],
}
`;

exports[`phpDoc snapshot of phpDocs 3`] = `
PhpDocument {
  "classConstants": Array [],
  "classes": Array [],
  "constants": Array [],
  "functions": Array [
    Function {
      "description": "",
      "name": TypeName {
        "isArray": false,
        "name": "\\\\test_function1",
      },
      "parameters": Array [
        Parameter {
          "name": "$stringParam",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": false,
                "name": "string",
              },
            ],
          },
          "value": "",
        },
        Parameter {
          "name": "$intParam",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": false,
                "name": "int",
              },
            ],
          },
          "value": "",
        },
        Parameter {
          "name": "$boolParam",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": false,
                "name": "boolean",
              },
            ],
          },
          "value": "",
        },
        Parameter {
          "name": "$floatParam",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": false,
                "name": "float",
              },
            ],
          },
          "value": "",
        },
      ],
      "scopeVar": Scope {
        "variables": Object {
          "$boolParam": Variable {
            "expression": Expression {},
            "name": "$boolParam",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "boolean",
                },
              ],
            },
          },
          "$floatParam": Variable {
            "expression": Expression {},
            "name": "$floatParam",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "float",
                },
              ],
            },
          },
          "$intParam": Variable {
            "expression": Expression {},
            "name": "$intParam",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "int",
                },
              ],
            },
          },
          "$stringParam": Variable {
            "expression": Expression {},
            "name": "$stringParam",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "string",
                },
              ],
            },
          },
          "$test": SimpleVariable {
            "expression": Expression {
              "currentSymbol": TokenSymbol {
                "text": "1",
              },
            },
            "name": "$test",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "int",
                },
              ],
            },
          },
        },
      },
      "types": Array [
        TypeName {
          "isArray": false,
          "name": "boolean",
        },
        TypeName {
          "isArray": false,
          "name": "string",
        },
        TypeName {
          "isArray": false,
          "name": "int",
        },
        TypeName {
          "isArray": false,
          "name": "float",
        },
        TypeName {
          "isArray": false,
          "name": "\\\\TestClass",
        },
      ],
    },
    Function {
      "description": "Test function 2",
      "name": TypeName {
        "isArray": false,
        "name": "\\\\test_function2",
      },
      "parameters": Array [
        Parameter {
          "name": "$param1",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": false,
                "name": "\\\\array|int",
              },
            ],
          },
          "value": "",
        },
        Parameter {
          "name": "$param2",
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "isArray": true,
                "name": "string",
              },
            ],
          },
          "value": "",
        },
      ],
      "scopeVar": Scope {
        "variables": Object {
          "$param1": Variable {
            "expression": Expression {},
            "name": "$param1",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": false,
                  "name": "\\\\array|int",
                },
              ],
            },
          },
          "$param2": Variable {
            "expression": Expression {},
            "name": "$param2",
            "type": TypeComposite {
              "_types": Array [
                TypeName {
                  "isArray": true,
                  "name": "string",
                },
              ],
            },
          },
        },
      },
      "types": Array [],
    },
  ],
  "importTable": ImportTable {
    "imports": Object {},
  },
  "methods": Array [],
  "properties": Array [],
}
`;

exports[`phpDoc snapshot of phpDocs 4`] = `
PhpDocument {
  "classConstants": Array [
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 32,
            "line": 38,
            "offset": 1084,
          },
          "start": Position {
            "character": 10,
            "line": 38,
            "offset": 1062,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "TEST_CLASS_CONST",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\TestClass",
      },
    },
    ClassConstant {
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 32,
            "line": 100,
            "offset": 2128,
          },
          "start": Position {
            "character": 10,
            "line": 100,
            "offset": 2106,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "name": TypeName {
        "isArray": false,
        "name": "TEST_CLASS_CONST",
      },
      "scope": null,
    },
  ],
  "classes": Array [
    Class {
      "extend": null,
      "implements": Array [
        TypeName {
          "isArray": false,
          "name": "TestInterface",
        },
        TypeName {
          "isArray": false,
          "name": "TestInterface2",
        },
      ],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 20,
            "offset": 409,
          },
          "start": Position {
            "character": 0,
            "line": 17,
            "offset": 343,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TestClass2",
      },
      "traits": Array [],
    },
    Class {
      "extend": null,
      "implements": Array [
        TypeName {
          "isArray": false,
          "name": "TestInterface",
        },
      ],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 72,
            "offset": 1875,
          },
          "start": Position {
            "character": 0,
            "line": 31,
            "offset": 888,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TestClass",
      },
      "traits": Array [],
    },
    Class {
      "extend": TypeName {
        "isArray": false,
        "name": "TestClass",
      },
      "implements": Array [],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 115,
            "offset": 2385,
          },
          "start": Position {
            "character": 0,
            "line": 115,
            "offset": 2348,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\ChildClass",
      },
      "traits": Array [],
    },
    Class {
      "extend": null,
      "implements": Array [],
      "location": Location {
        "range": Range {
          "end": Position {
            "character": 1,
            "line": 137,
            "offset": 2883,
          },
          "start": Position {
            "character": 0,
            "line": 130,
            "offset": 2778,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "isArray": false,
        "name": "\\\\UnusedClass",
      },
      "traits": Array [],
    },
  ],
  "constants": Array [
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST",
      },
      "type": TypeName {
        "isArray": false,
        "name": "int",
      },
      "value": "123",
    },
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST1",
      },
      "type": TypeName {
        "isArray": false,
        "name": "int",
      },
      "value": "456",
    },
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST2",
      },
      "type": TypeName {
        "isArray": false,
        "name": "int",
      },
      "value": "789",
    },
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST_STRING",
      },
      "type": TypeName {
        "isArray": false,
        "name": "string",
      },
      "value": "'Simple string'",
    },
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST_STRING2",
      },
      "type": TypeName {
        "isArray": false,
        "name": "string",
      },
      "value": "'Not so simple string'",
    },
    Constant {
      "name": TypeName {
        "isArray": false,
        "name": "\\\\TEST_CONST_STRING3",
      },
      "type": TypeName {
        "isArray": false,
        "name": "string",
      },
      "value": "'Quite complex ' . TEST_CONST_STRING",
    },
  ],
  "functions": Array [
    Function {
      "description": "Officia aliquip adipisicing et nulla et laboris dolore labore.
",
      "name": TypeName {
        "isArray": false,
        "name": "\\\\test_function",
      },
      "parameters": Array [],
      "scopeVar": Scope {
        "variables": Object {},
      },
      "types": Array [],
    },
  ],
  "importTable": ImportTable {
    "imports": Object {},
  },
  "methods": Array [
    Method {
      "description": "Do magna consequat veniam minim proident eiusmod incididunt aute proident.",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 60,
            "offset": 1547,
          },
          "start": Position {
            "character": 4,
            "line": 57,
            "offset": 1457,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "staticTestMethod",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\TestClass",
      },
    },
    Method {
      "description": "Non culpa nostrud mollit esse sunt laboris in irure ullamco cupidatat amet.
",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 71,
            "offset": 1873,
          },
          "start": Position {
            "character": 4,
            "line": 68,
            "offset": 1758,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "testMethod",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\TestClass",
      },
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 107,
            "offset": 2254,
          },
          "start": Position {
            "character": 4,
            "line": 104,
            "offset": 2200,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "staticTestMethod",
      },
      "scope": null,
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 112,
            "offset": 2343,
          },
          "start": Position {
            "character": 4,
            "line": 109,
            "offset": 2260,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "testMethod",
      },
      "scope": null,
    },
    Method {
      "description": "",
      "location": Location {
        "range": Range {
          "end": Position {
            "character": -1,
            "line": 136,
            "offset": 2881,
          },
          "start": Position {
            "character": 4,
            "line": 134,
            "offset": 2831,
          },
        },
        "relativeUri": "case/global_symbols.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": TypeName {
        "isArray": false,
        "name": "unusedMethod",
      },
      "scope": TypeName {
        "isArray": false,
        "name": "\\\\UnusedClass",
      },
    },
  ],
  "properties": Array [
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$staticTestProperty",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$testProperty",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$staticTestProperty",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$testProperty",
    },
    Property {
      "description": "",
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 1,
      },
      "name": "$unusedProperty",
    },
  ],
}
`;
