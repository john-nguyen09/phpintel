// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`completion query from RefResolver 1`] = `
Array [
  Function {
    "description": "Officia aliquip adipisicing et nulla et laboris dolore labore.
",
    "name": TypeName {
      "name": "\\\\test_function",
    },
    "parameters": Array [],
    "scopeVar": ScopeVar {
      "variables": Object {},
    },
    "types": Array [],
  },
  Function {
    "description": "",
    "name": TypeName {
      "name": "\\\\test_function1",
    },
    "parameters": Array [
      Parameter {
        "location": Location {},
        "name": "$stringParam",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "string",
            },
          ],
        },
        "value": "",
      },
      Parameter {
        "location": Location {},
        "name": "$intParam",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "int",
            },
          ],
        },
        "value": "",
      },
      Parameter {
        "location": Location {},
        "name": "$boolParam",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "boolean",
            },
          ],
        },
        "value": "",
      },
      Parameter {
        "location": Location {},
        "name": "$floatParam",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "float",
            },
          ],
        },
        "value": "",
      },
    ],
    "scopeVar": ScopeVar {
      "variables": Object {
        "$boolParam": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "boolean",
            },
          ],
        },
        "$floatParam": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "float",
            },
          ],
        },
        "$intParam": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "int",
            },
          ],
        },
        "$stringParam": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "string",
            },
          ],
        },
        "$test": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "int",
            },
          ],
        },
      },
    },
    "types": Array [
      TypeName {
        "name": "boolean",
      },
      TypeName {
        "name": "string",
      },
      TypeName {
        "name": "int",
      },
      TypeName {
        "name": "float",
      },
      TypeName {
        "name": "\\\\TestClass",
      },
    ],
  },
  Function {
    "description": "Test function 2",
    "name": TypeName {
      "name": "\\\\test_function2",
    },
    "parameters": Array [
      Parameter {
        "location": Location {},
        "name": "$param1",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "\\\\array|int",
            },
          ],
        },
        "value": "",
      },
      Parameter {
        "location": Location {},
        "name": "$param2",
        "refKind": 3,
        "scope": null,
        "type": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "string",
            },
          ],
        },
        "value": "",
      },
    ],
    "scopeVar": ScopeVar {
      "variables": Object {
        "$param1": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "\\\\array|int",
            },
          ],
        },
        "$param2": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "string",
            },
          ],
        },
      },
    },
    "types": Array [],
  },
]
`;

exports[`completion query from RefResolver 2`] = `
Array [
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "123",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST1",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "456",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST2",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "789",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING2",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Not so simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING3",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Quite complex ' . TEST_CONST_STRING",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_DEFINE_CONSTANT",
    },
    "type": TypeName {
      "name": "boolean",
    },
    "value": "false",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT1",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'simple string'",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT2",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'not so simple string'",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT3",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'more of ' . TEST_STRING_CONSTANT2",
  },
]
`;

exports[`completion query from RefResolver 3`] = `
Array [
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING2",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Not so simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING3",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Quite complex ' . TEST_CONST_STRING",
  },
]
`;

exports[`completion query from RefResolver 4`] = `
Array [
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "123",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST1",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "456",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST2",
    },
    "type": TypeName {
      "name": "int",
    },
    "value": "789",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_DEFINE_CONSTANT",
    },
    "type": TypeName {
      "name": "boolean",
    },
    "value": "false",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT1",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'simple string'",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT2",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'not so simple string'",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\TEST_STRING_CONSTANT3",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'more of ' . TEST_STRING_CONSTANT2",
  },
  DefineConstant {
    "name": TypeName {
      "name": "\\\\CONSTANT_SAMPLE1",
    },
    "type": TypeName {
      "name": "boolean",
    },
    "value": "false",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING2",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Not so simple string'",
  },
  Constant {
    "name": TypeName {
      "name": "\\\\TEST_CONST_STRING3",
    },
    "type": TypeName {
      "name": "string",
    },
    "value": "'Quite complex ' . TEST_CONST_STRING",
  },
]
`;
