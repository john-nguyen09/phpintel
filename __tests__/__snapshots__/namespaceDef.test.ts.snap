// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`namespaceDef returns import table 1`] = `
ImportTable {
  "imports": Object {
    "": "\\\\NamespaceDef\\\\TestClassNamespace1",
  },
  "namespace": NamespaceName {
    "parts": Array [
      "ImportTable",
    ],
  },
}
`;

exports[`namespaceDef should assign namespace to phpDocument 1`] = `
PhpDocument {
  "argumentLists": Array [],
  "classConstants": Array [],
  "classes": Array [
    Class {
      "extend": null,
      "implements": Array [],
      "location": Object {
        "range": Object {
          "end": 61,
          "start": 31,
        },
        "uri": "case/namespaceDef/class.php",
      },
      "modifier": SymbolModifier {
        "modifier": 0,
        "visibility": 0,
      },
      "name": TypeName {
        "name": "\\\\NamespaceDefTestClassNamespace1",
      },
      "traits": Array [],
    },
  ],
  "constants": Array [],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {},
    "namespace": NamespaceName {
      "parts": Array [
        "NamespaceDef",
      ],
    },
  },
  "methods": Array [],
  "modifiedTime": -1,
  "properties": Array [],
  "references": Array [],
  "scopeVarStack": Array [
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 61,
          "start": 0,
        },
        "uri": "case/namespaceDef/class.php",
      },
      "variables": Object {},
    },
  ],
  "text": "<?php
namespace NamespaceDef;

class TestClassNamespace1 {

}",
  "uri": "case/namespaceDef/class.php",
}
`;

exports[`namespaceDef should assign namespace to phpDocument 2`] = `
PhpDocument {
  "argumentLists": Array [],
  "classConstants": Array [],
  "classes": Array [],
  "constants": Array [
    Constant {
      "name": TypeName {
        "name": "\\\\NamespaceDefPI",
      },
      "type": TypeName {
        "name": "float",
      },
      "value": "3.14",
    },
  ],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {},
    "namespace": NamespaceName {
      "parts": Array [
        "NamespaceDef",
      ],
    },
  },
  "methods": Array [],
  "modifiedTime": -1,
  "properties": Array [],
  "references": Array [
    Constant {
      "name": TypeName {
        "name": "\\\\NamespaceDefPI",
      },
      "type": TypeName {
        "name": "float",
      },
      "value": "3.14",
    },
  ],
  "scopeVarStack": Array [
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 47,
          "start": 0,
        },
        "uri": "case/namespaceDef/constant.php",
      },
      "variables": Object {},
    },
  ],
  "text": "<?php
namespace NamespaceDef;

const PI = 3.14;",
  "uri": "case/namespaceDef/constant.php",
}
`;

exports[`namespaceDef should assign namespace to phpDocument 3`] = `
PhpDocument {
  "argumentLists": Array [
    ArgumentExpressionList {
      "arguments": Array [],
      "location": Object {
        "range": Object {
          "end": 70,
          "start": 38,
        },
        "uri": "case/namespaceDef/defineConst.php",
      },
    },
  ],
  "classConstants": Array [],
  "classes": Array [],
  "constants": Array [
    DefineConstant {
      "name": TypeName {
        "name": "\\\\NamespaceDefDEFINE_CONST",
      },
      "type": TypeName {
        "name": "string",
      },
      "value": "'Hello world!!!'",
    },
  ],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {},
    "namespace": NamespaceName {
      "parts": Array [
        "NamespaceDef",
      ],
    },
  },
  "methods": Array [],
  "modifiedTime": -1,
  "properties": Array [],
  "references": Array [
    FunctionCall {
      "argumentList": ArgumentExpressionList {
        "arguments": Array [],
        "location": Object {
          "range": Object {
            "end": 70,
            "start": 38,
          },
          "uri": "case/namespaceDef/defineConst.php",
        },
      },
      "location": Object {
        "range": Object {
          "end": 71,
          "start": 31,
        },
        "uri": "case/namespaceDef/defineConst.php",
      },
      "realSymbol": DefineConstant {
        "name": TypeName {
          "name": "\\\\NamespaceDefDEFINE_CONST",
        },
        "type": TypeName {
          "name": "string",
        },
        "value": "'Hello world!!!'",
      },
      "refKind": 1,
      "scope": null,
      "type": TypeName {
        "name": "",
      },
    },
    DefineConstant {
      "name": TypeName {
        "name": "\\\\NamespaceDefDEFINE_CONST",
      },
      "type": TypeName {
        "name": "string",
      },
      "value": "'Hello world!!!'",
    },
  ],
  "scopeVarStack": Array [
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 72,
          "start": 0,
        },
        "uri": "case/namespaceDef/defineConst.php",
      },
      "variables": Object {},
    },
  ],
  "text": "<?php
namespace NamespaceDef;

define('DEFINE_CONST', 'Hello world!!!');",
  "uri": "case/namespaceDef/defineConst.php",
}
`;

exports[`namespaceDef should assign namespace to phpDocument 4`] = `
PhpDocument {
  "argumentLists": Array [],
  "classConstants": Array [],
  "classes": Array [],
  "constants": Array [],
  "functions": Array [
    Function {
      "description": "",
      "name": TypeName {
        "name": "\\\\NamespaceDeffunction_with_namespace",
      },
      "parameters": Array [
        Parameter {
          "description": "",
          "location": Object {
            "range": Object {
              "end": 215,
              "start": 208,
            },
            "uri": "case/namespaceDef/function.php",
          },
          "name": "$param1",
          "refKind": 3,
          "scope": null,
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
              },
            ],
            "existingTypes": Object {
              "TestClassNamespace1": true,
            },
          },
          "value": "",
        },
        Parameter {
          "description": "",
          "location": Object {
            "range": Object {
              "end": 224,
              "start": 217,
            },
            "uri": "case/namespaceDef/function.php",
          },
          "name": "$param2",
          "refKind": 3,
          "scope": null,
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "\\\\FullyQualified\\\\Name\\\\Class",
              },
            ],
            "existingTypes": Object {
              "\\\\FullyQualified\\\\Name\\\\Class": true,
            },
          },
          "value": "",
        },
        Parameter {
          "description": "",
          "location": Object {
            "range": Object {
              "end": 238,
              "start": 226,
            },
            "uri": "case/namespaceDef/function.php",
          },
          "name": "$param3",
          "refKind": 3,
          "scope": null,
          "type": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "boolean",
              },
            ],
            "existingTypes": Object {
              "boolean": true,
            },
          },
          "value": "",
        },
      ],
      "scopeVar": ScopeVar {
        "location": Object {
          "range": Object {
            "end": 579,
            "start": 175,
          },
          "uri": "case/namespaceDef/function.php",
        },
        "variables": Object {
          "$param1": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
              },
            ],
            "existingTypes": Object {
              "TestClassNamespace1": true,
            },
          },
          "$param2": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "\\\\FullyQualified\\\\Name\\\\Class",
              },
            ],
            "existingTypes": Object {
              "\\\\FullyQualified\\\\Name\\\\Class": true,
            },
          },
          "$param3": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "boolean",
              },
            ],
            "existingTypes": Object {
              "boolean": true,
            },
          },
          "$var1": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "boolean",
              },
            ],
            "existingTypes": Object {
              "boolean": true,
            },
          },
          "$var2": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "string",
              },
            ],
            "existingTypes": Object {
              "string": true,
            },
          },
          "$var3": TypeComposite {
            "_types": Array [
              TypeName {
                "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
              },
            ],
            "existingTypes": Object {
              "CONSTANT_IN_NAMESPACE": true,
            },
          },
        },
      },
      "types": Array [
        TypeName {
          "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
        },
        TypeName {
          "name": "string",
        },
        TypeName {
          "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
        },
        TypeName {
          "name": "\\\\FullyQualified\\\\Name\\\\Class",
        },
        TypeName {
          "name": "boolean",
        },
      ],
    },
  ],
  "importTable": ImportTable {
    "imports": Object {},
    "namespace": NamespaceName {
      "parts": Array [
        "NamespaceDef",
      ],
    },
  },
  "methods": Array [],
  "modifiedTime": -1,
  "properties": Array [],
  "references": Array [
    Parameter {
      "description": "",
      "location": Object {
        "range": Object {
          "end": 215,
          "start": 208,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "name": "$param1",
      "refKind": 3,
      "scope": null,
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
          },
        ],
        "existingTypes": Object {
          "TestClassNamespace1": true,
        },
      },
      "value": "",
    },
    Parameter {
      "description": "",
      "location": Object {
        "range": Object {
          "end": 224,
          "start": 217,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "name": "$param2",
      "refKind": 3,
      "scope": null,
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\FullyQualified\\\\Name\\\\Class",
          },
        ],
        "existingTypes": Object {
          "\\\\FullyQualified\\\\Name\\\\Class": true,
        },
      },
      "value": "",
    },
    Parameter {
      "description": "",
      "location": Object {
        "range": Object {
          "end": 238,
          "start": 226,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "name": "$param3",
      "refKind": 3,
      "scope": null,
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
      "value": "",
    },
    SimpleVariable {
      "name": "$var1",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
    },
    ConstantAccess {
      "location": Object {
        "range": Object {
          "end": 259,
          "start": 254,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "refKind": 6,
      "scope": null,
      "type": TypeName {
        "name": "boolean",
      },
      "value": "false",
    },
    SimpleVariable {
      "name": "$var2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "string",
          },
        ],
        "existingTypes": Object {
          "string": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var3",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
          },
        ],
        "existingTypes": Object {
          "CONSTANT_IN_NAMESPACE": true,
        },
      },
    },
    ConstantAccess {
      "location": Object {
        "range": Object {
          "end": 313,
          "start": 292,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "refKind": 6,
      "scope": null,
      "type": TypeName {
        "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
      },
      "value": "CONSTANT_IN_NAMESPACE",
    },
    SimpleVariable {
      "name": "$var1",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "string",
          },
        ],
        "existingTypes": Object {
          "string": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var3",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
          },
        ],
        "existingTypes": Object {
          "CONSTANT_IN_NAMESPACE": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var3",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
          },
        ],
        "existingTypes": Object {
          "CONSTANT_IN_NAMESPACE": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var1",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "string",
          },
        ],
        "existingTypes": Object {
          "string": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "string",
          },
        ],
        "existingTypes": Object {
          "string": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var1",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
    },
    SimpleVariable {
      "name": "$param1",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
          },
        ],
        "existingTypes": Object {
          "TestClassNamespace1": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "string",
          },
        ],
        "existingTypes": Object {
          "string": true,
        },
      },
    },
    SimpleVariable {
      "name": "$param2",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\FullyQualified\\\\Name\\\\Class",
          },
        ],
        "existingTypes": Object {
          "\\\\FullyQualified\\\\Name\\\\Class": true,
        },
      },
    },
    SimpleVariable {
      "name": "$var3",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
          },
        ],
        "existingTypes": Object {
          "CONSTANT_IN_NAMESPACE": true,
        },
      },
    },
    SimpleVariable {
      "name": "$param3",
      "type": TypeComposite {
        "_types": Array [
          TypeName {
            "name": "boolean",
          },
        ],
        "existingTypes": Object {
          "boolean": true,
        },
      },
    },
  ],
  "scopeVarStack": Array [
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 579,
          "start": 0,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "variables": Object {},
    },
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 579,
          "start": 175,
        },
        "uri": "case/namespaceDef/function.php",
      },
      "variables": Object {
        "$param1": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "\\\\NamespaceDef\\\\TestClassNamespace1",
            },
          ],
          "existingTypes": Object {
            "TestClassNamespace1": true,
          },
        },
        "$param2": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "\\\\FullyQualified\\\\Name\\\\Class",
            },
          ],
          "existingTypes": Object {
            "\\\\FullyQualified\\\\Name\\\\Class": true,
          },
        },
        "$param3": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "boolean",
            },
          ],
          "existingTypes": Object {
            "boolean": true,
          },
        },
        "$var1": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "boolean",
            },
          ],
          "existingTypes": Object {
            "boolean": true,
          },
        },
        "$var2": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "string",
            },
          ],
          "existingTypes": Object {
            "string": true,
          },
        },
        "$var3": TypeComposite {
          "_types": Array [
            TypeName {
              "name": "\\\\NamespaceDef\\\\CONSTANT_IN_NAMESPACE",
            },
          ],
          "existingTypes": Object {
            "CONSTANT_IN_NAMESPACE": true,
          },
        },
      },
    },
  ],
  "text": "<?php
namespace NamespaceDef;

/**
 * @param TestClassNamespace1 $param1
 * @param \\\\FullyQualified\\\\Name\\\\Class $param2
 * @param boolean
 * 
 * @return TestClassNamespace2
 */
function function_with_namespace($param1, $param2, bool $param3) {
    $var1 = false;
    $var2 = 'abc';
    $var3 = CONSTANT_IN_NAMESPACE;

    if ($var1 && $var2 && $var3) {
        return $var3;
    }

    if ($var1 && $var2) {
        return $var2;
    }

    if ($var1) {
        return $param1;
    }

    if ($var2) {
        return $param2;
    }

    if ($var3) {
        return $param3;
    }
}",
  "uri": "case/namespaceDef/function.php",
}
`;

exports[`namespaceDef should assign namespace to phpDocument 5`] = `
PhpDocument {
  "argumentLists": Array [],
  "classConstants": Array [],
  "classes": Array [],
  "constants": Array [],
  "functions": Array [],
  "importTable": ImportTable {
    "imports": Object {
      "": "\\\\NamespaceDef\\\\TestClassNamespace1",
    },
    "namespace": NamespaceName {
      "parts": Array [
        "ImportTable",
      ],
    },
  },
  "methods": Array [],
  "modifiedTime": -1,
  "properties": Array [],
  "references": Array [],
  "scopeVarStack": Array [
    ScopeVar {
      "location": Object {
        "range": Object {
          "end": 149,
          "start": 0,
        },
        "uri": "case/namespaceDef/import_table.php",
      },
      "variables": Object {},
    },
  ],
  "text": "<?php
namespace ImportTable;

use NamespaceDef\\\\{
    const PI,
    function function_with_namespace
};
use NamespaceDef\\\\TestClassNamespace1;
",
  "uri": "case/namespaceDef/import_table.php",
}
`;
