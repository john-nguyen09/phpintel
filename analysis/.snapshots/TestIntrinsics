([]analysis.Symbol) (len=10) {
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:0-2:5
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:12-2:20
      },
      Name: (string) (len=8) "DateTime"
    }
  }),
  (*analysis.ArgumentList)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 2:20-2:21
    },
    arguments: ([]phrase.AstNode) <nil>,
    ranges: ([]protocol.Range) (len=1) {
      (protocol.Range) 2:20-2:21
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:0-2:5
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:12-2:20
      },
      Name: (string) (len=8) "DateTime"
    }
  }),
  (*analysis.ArgumentList)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 2:20-2:21
    },
    arguments: ([]phrase.AstNode) <nil>,
    ranges: ([]protocol.Range) (len=1) {
      (protocol.Range) 2:20-2:21
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 4:10-4:15
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 8:6-8:11
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 10:11-10:16
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=9) "\\DateTime",
            original: (string) (len=8) "DateTime"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=9) "\\DateTime": (bool) true
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=9) "\\DateTime",
                original: (string) (len=8) "DateTime"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=9) "\\DateTime": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:12-2:20
          },
          Name: (string) (len=8) "DateTime"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 11:20-11:25
      },
      Name: (string) (len=5) "$var1"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  })
}
