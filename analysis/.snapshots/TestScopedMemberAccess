([]analysis.HasTypes) (len=12) {
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:0-2:9
      },
      Name: (string) (len=9) "TestClass"
    },
    isResolved: (bool) false
  }),
  (*analysis.ScopedPropertyAccess)({
    MemberAccessExpression: (analysis.MemberAccessExpression) {
      Expression: (analysis.Expression) {
        Type: (analysis.TypeComposite) {
          typeStrings: ([]analysis.TypeString) <nil>
        },
        Scope: (*analysis.ClassAccess)({
          Expression: (analysis.Expression) {
            Type: (analysis.TypeComposite) {
              typeStrings: ([]analysis.TypeString) (len=1) {
                (analysis.TypeString) {
                  fqn: (string) (len=10) "\\TestClass",
                  original: (string) (len=9) "TestClass",
                  arrayLevel: (int) 0
                }
              }
            },
            Scope: (analysis.HasTypes) <nil>,
            Location: (protocol.Location) {
              URI: (string) (len=5) "test1",
              Range: (protocol.Range) 2:0-2:9
            },
            Name: (string) (len=9) "TestClass"
          },
          isResolved: (bool) false
        }),
        Location: (protocol.Location) {
          URI: (string) (len=5) "test1",
          Range: (protocol.Range) 2:11-2:17
        },
        Name: (string) (len=6) "$prop1"
      }
    },
    hasResolved: (bool) false
  }),
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 3:0-3:9
      },
      Name: (string) (len=9) "TestClass"
    },
    isResolved: (bool) false
  }),
  (*analysis.ScopedConstantAccess)({
    MemberAccessExpression: (analysis.MemberAccessExpression) {
      Expression: (analysis.Expression) {
        Type: (analysis.TypeComposite) {
          typeStrings: ([]analysis.TypeString) <nil>
        },
        Scope: (*analysis.ClassAccess)({
          Expression: (analysis.Expression) {
            Type: (analysis.TypeComposite) {
              typeStrings: ([]analysis.TypeString) (len=1) {
                (analysis.TypeString) {
                  fqn: (string) (len=10) "\\TestClass",
                  original: (string) (len=9) "TestClass",
                  arrayLevel: (int) 0
                }
              }
            },
            Scope: (analysis.HasTypes) <nil>,
            Location: (protocol.Location) {
              URI: (string) (len=5) "test1",
              Range: (protocol.Range) 3:0-3:9
            },
            Name: (string) (len=9) "TestClass"
          },
          isResolved: (bool) false
        }),
        Location: (protocol.Location) {
          URI: (string) (len=5) "test1",
          Range: (protocol.Range) 3:11-3:17
        },
        Name: (string) (len=6) "CONST1"
      }
    }
  }),
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 4:0-4:9
      },
      Name: (string) (len=9) "TestClass"
    },
    isResolved: (bool) false
  }),
  (*analysis.ScopedMethodAccess)({
    MemberAccessExpression: (analysis.MemberAccessExpression) {
      Expression: (analysis.Expression) {
        Type: (analysis.TypeComposite) {
          typeStrings: ([]analysis.TypeString) <nil>
        },
        Scope: (*analysis.ClassAccess)({
          Expression: (analysis.Expression) {
            Type: (analysis.TypeComposite) {
              typeStrings: ([]analysis.TypeString) (len=1) {
                (analysis.TypeString) {
                  fqn: (string) (len=10) "\\TestClass",
                  original: (string) (len=9) "TestClass",
                  arrayLevel: (int) 0
                }
              }
            },
            Scope: (analysis.HasTypes) <nil>,
            Location: (protocol.Location) {
              URI: (string) (len=5) "test1",
              Range: (protocol.Range) 4:0-4:9
            },
            Name: (string) (len=9) "TestClass"
          },
          isResolved: (bool) false
        }),
        Location: (protocol.Location) {
          URI: (string) (len=5) "test1",
          Range: (protocol.Range) 4:11-4:18
        },
        Name: (string) (len=7) "method1"
      }
    },
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass",
                arrayLevel: (int) 0
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 6:16-6:25
          },
          Name: (string) (len=9) "TestClass"
        },
        children: ([]analysis.Symbol) <nil>
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:0-6:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:16-6:25
      },
      Name: (string) (len=9) "TestClass"
    },
    children: ([]analysis.Symbol) <nil>
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass",
                arrayLevel: (int) 0
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 6:16-6:25
          },
          Name: (string) (len=9) "TestClass"
        },
        children: ([]analysis.Symbol) <nil>
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 7:0-7:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.PropertyAccess)({
    MemberAccessExpression: (analysis.MemberAccessExpression) {
      Expression: (analysis.Expression) {
        Type: (analysis.TypeComposite) {
          typeStrings: ([]analysis.TypeString) <nil>
        },
        Scope: (*analysis.Variable)({
          Expression: (analysis.Expression) {
            Type: (analysis.TypeComposite) {
              typeStrings: ([]analysis.TypeString) (len=1) {
                (analysis.TypeString) {
                  fqn: (string) (len=10) "\\TestClass",
                  original: (string) (len=9) "TestClass",
                  arrayLevel: (int) 0
                }
              }
            },
            Scope: (*analysis.ClassTypeDesignator)({
              Expression: (analysis.Expression) {
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) (len=1) {
                    (analysis.TypeString) {
                      fqn: (string) (len=10) "\\TestClass",
                      original: (string) (len=9) "TestClass",
                      arrayLevel: (int) 0
                    }
                  }
                },
                Scope: (analysis.HasTypes) <nil>,
                Location: (protocol.Location) {
                  URI: (string) (len=5) "test1",
                  Range: (protocol.Range) 6:16-6:25
                },
                Name: (string) (len=9) "TestClass"
              },
              children: ([]analysis.Symbol) <nil>
            }),
            Location: (protocol.Location) {
              URI: (string) (len=5) "test1",
              Range: (protocol.Range) 7:0-7:9
            },
            Name: (string) (len=9) "$instance"
          },
          description: (string) "",
          canReferenceGlobal: (bool) true,
          hasResolved: (bool) false
        }),
        Location: (protocol.Location) {
          URI: (string) (len=5) "test1",
          Range: (protocol.Range) 7:11-7:16
        },
        Name: (string) (len=5) "prop2"
      }
    },
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass",
            arrayLevel: (int) 0
          }
        }
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass",
                arrayLevel: (int) 0
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 6:16-6:25
          },
          Name: (string) (len=9) "TestClass"
        },
        children: ([]analysis.Symbol) <nil>
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 8:0-8:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.MethodAccess)({
    MemberAccessExpression: (analysis.MemberAccessExpression) {
      Expression: (analysis.Expression) {
        Type: (analysis.TypeComposite) {
          typeStrings: ([]analysis.TypeString) <nil>
        },
        Scope: (*analysis.Variable)({
          Expression: (analysis.Expression) {
            Type: (analysis.TypeComposite) {
              typeStrings: ([]analysis.TypeString) (len=1) {
                (analysis.TypeString) {
                  fqn: (string) (len=10) "\\TestClass",
                  original: (string) (len=9) "TestClass",
                  arrayLevel: (int) 0
                }
              }
            },
            Scope: (*analysis.ClassTypeDesignator)({
              Expression: (analysis.Expression) {
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) (len=1) {
                    (analysis.TypeString) {
                      fqn: (string) (len=10) "\\TestClass",
                      original: (string) (len=9) "TestClass",
                      arrayLevel: (int) 0
                    }
                  }
                },
                Scope: (analysis.HasTypes) <nil>,
                Location: (protocol.Location) {
                  URI: (string) (len=5) "test1",
                  Range: (protocol.Range) 6:16-6:25
                },
                Name: (string) (len=9) "TestClass"
              },
              children: ([]analysis.Symbol) <nil>
            }),
            Location: (protocol.Location) {
              URI: (string) (len=5) "test1",
              Range: (protocol.Range) 8:0-8:9
            },
            Name: (string) (len=9) "$instance"
          },
          description: (string) "",
          canReferenceGlobal: (bool) true,
          hasResolved: (bool) false
        }),
        Location: (protocol.Location) {
          URI: (string) (len=5) "test1",
          Range: (protocol.Range) 8:11-8:18
        },
        Name: (string) (len=7) "method2"
      }
    },
    hasResolved: (bool) false
  })
}
