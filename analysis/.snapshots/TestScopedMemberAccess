([]analysis.Symbol) (len=16) {
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:0-2:9
      },
      Name: (string) (len=9) "TestClass"
    }
  }),
  (*analysis.ScopedPropertyAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.ClassAccess)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 2:0-2:9
          },
          Name: (string) (len=9) "TestClass"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 2:11-2:17
      },
      Name: (string) (len=6) "$prop1"
    }
  }),
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 3:0-3:9
      },
      Name: (string) (len=9) "TestClass"
    }
  }),
  (*analysis.ScopedConstantAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.ClassAccess)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 3:0-3:9
          },
          Name: (string) (len=9) "TestClass"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 3:11-3:17
      },
      Name: (string) (len=6) "CONST1"
    }
  }),
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 4:0-4:9
      },
      Name: (string) (len=9) "TestClass"
    }
  }),
  (*analysis.ScopedMethodAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.ClassAccess)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 4:0-4:9
          },
          Name: (string) (len=9) "TestClass"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 4:11-4:18
      },
      Name: (string) (len=7) "method1"
    }
  }),
  (*analysis.ArgumentList)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 4:18-4:19
    },
    arguments: ([]phrase.AstNode) <nil>,
    ranges: ([]protocol.Range) (len=1) {
      (protocol.Range) 4:18-4:19
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 6:16-6:25
          },
          Name: (string) (len=9) "TestClass"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:0-6:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:16-6:25
      },
      Name: (string) (len=9) "TestClass"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:0-6:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 6:16-6:25
      },
      Name: (string) (len=9) "TestClass"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 7:0-7:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.PropertyAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.Variable)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 7:0-7:9
          },
          Name: (string) (len=9) "$instance"
        },
        description: (string) "",
        canReferenceGlobal: (bool) true,
        hasResolved: (bool) false
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 7:11-7:16
      },
      Name: (string) (len=5) "prop2"
    },
    hasResolved: (bool) false
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "\\TestClass",
            original: (string) (len=9) "TestClass"
          }
        },
        uniqueFQNs: (map[string]bool) (len=1) {
          (string) (len=10) "\\TestClass": (bool) true
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 8:0-8:9
      },
      Name: (string) (len=9) "$instance"
    },
    description: (string) "",
    canReferenceGlobal: (bool) true,
    hasResolved: (bool) false
  }),
  (*analysis.MethodAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>,
        uniqueFQNs: (map[string]bool) <nil>
      },
      Scope: (*analysis.Variable)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "\\TestClass",
                original: (string) (len=9) "TestClass"
              }
            },
            uniqueFQNs: (map[string]bool) (len=1) {
              (string) (len=10) "\\TestClass": (bool) true
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=5) "test1",
            Range: (protocol.Range) 8:0-8:9
          },
          Name: (string) (len=9) "$instance"
        },
        description: (string) "",
        canReferenceGlobal: (bool) true,
        hasResolved: (bool) false
      }),
      Location: (protocol.Location) {
        URI: (string) (len=5) "test1",
        Range: (protocol.Range) 8:11-8:18
      },
      Name: (string) (len=7) "method2"
    },
    hasResolved: (bool) false
  }),
  (*analysis.ArgumentList)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 8:18-8:19
    },
    arguments: ([]phrase.AstNode) <nil>,
    ranges: ([]protocol.Range) (len=1) {
      (protocol.Range) 8:18-8:19
    }
  })
}
