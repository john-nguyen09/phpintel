([]analysis.Symbol) (len=7) {
  (*analysis.Class)({
    description: (string) "",
    Location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 7:0-79:1
    },
    Modifier: (analysis.ClassModifierValue) 0,
    Name: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    Extends: (analysis.TypeString) {
      fqn: (string) (len=61) "\\Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider",
      original: (string) (len=15) "ServiceProvider",
      arrayLevel: (int) 0
    },
    Interfaces: ([]analysis.TypeString) <nil>,
    Use: ([]analysis.TypeString) <nil>
  }),
  (*analysis.Property)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 16:14-16:49
    },
    description: (string) "",
    Name: (string) (len=10) "$namespace",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    Types: (analysis.TypeComposite) {
      typeStrings: ([]analysis.TypeString) (len=1) {
        (analysis.TypeString) {
          fqn: (string) (len=6) "string",
          original: (string) (len=6) "string",
          arrayLevel: (int) 0
        }
      },
      uniqueFQNs: (map[string]bool) (len=1) {
        (string) (len=6) "string": (bool) true
      }
    }
  }),
  (*analysis.ClassConst)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 23:17-23:27
    },
    Name: (string) (len=4) "HOME",
    Value: (string) (len=3) "'/'",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    }
  }),
  (*analysis.Method)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 30:4-35:5
    },
    Name: (string) (len=4) "boot",
    Params: ([]*analysis.Parameter) {
    },
    returnTypes: (analysis.TypeComposite) {
      typeStrings: ([]analysis.TypeString) (len=1) {
        (analysis.TypeString) {
          fqn: (string) (len=4) "void",
          original: (string) (len=4) "void",
          arrayLevel: (int) 0
        }
      },
      uniqueFQNs: (map[string]bool) (len=1) {
        (string) (len=4) "void": (bool) true
      }
    },
    description: (string) (len=55) "Define your route model bindings, pattern filters, etc.",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 42:4-49:5
    },
    Name: (string) (len=3) "map",
    Params: ([]*analysis.Parameter) {
    },
    returnTypes: (analysis.TypeComposite) {
      typeStrings: ([]analysis.TypeString) (len=1) {
        (analysis.TypeString) {
          fqn: (string) (len=4) "void",
          original: (string) (len=4) "void",
          arrayLevel: (int) 0
        }
      },
      uniqueFQNs: (map[string]bool) (len=1) {
        (string) (len=4) "void": (bool) true
      }
    },
    description: (string) (len=38) "Define the routes for the application.",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 58:4-63:5
    },
    Name: (string) (len=12) "mapWebRoutes",
    Params: ([]*analysis.Parameter) {
    },
    returnTypes: (analysis.TypeComposite) {
      typeStrings: ([]analysis.TypeString) (len=1) {
        (analysis.TypeString) {
          fqn: (string) (len=4) "void",
          original: (string) (len=4) "void",
          arrayLevel: (int) 0
        }
      },
      uniqueFQNs: (map[string]bool) (len=1) {
        (string) (len=4) "void": (bool) true
      }
    },
    description: (string) (len=107) "Define the \"web\" routes for the application.\n\nThese routes all receive session state, CSRF protection, etc.",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    location: (protocol.Location) {
      URI: (string) (len=5) "test1",
      Range: (protocol.Range) 72:4-78:5
    },
    Name: (string) (len=12) "mapApiRoutes",
    Params: ([]*analysis.Parameter) {
    },
    returnTypes: (analysis.TypeComposite) {
      typeStrings: ([]analysis.TypeString) (len=1) {
        (analysis.TypeString) {
          fqn: (string) (len=4) "void",
          original: (string) (len=4) "void",
          arrayLevel: (int) 0
        }
      },
      uniqueFQNs: (map[string]bool) (len=1) {
        (string) (len=4) "void": (bool) true
      }
    },
    description: (string) (len=83) "Define the \"api\" routes for the application.\n\nThese routes are typically stateless.",
    Scope: (analysis.TypeString) {
      fqn: (string) (len=35) "\\App\\Providers\\RouteServiceProvider",
      original: (string) (len=20) "RouteServiceProvider",
      arrayLevel: (int) 0
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  })
}
