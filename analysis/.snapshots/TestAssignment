([]analysis.Symbol) (len=9) {
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.ClassTypeDesignator)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "TestClass1",
                original: (string) (len=10) "TestClass1"
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=39) "file:///../cases/variableAssignment.php",
            Range: (protocol.Range) 2:12-2:22
          },
          Name: (string) (len=10) "TestClass1"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 2:0-2:5
      },
      Name: (string) (len=5) "$var1"
    }
  }),
  (*analysis.ClassTypeDesignator)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "TestClass1",
            original: (string) (len=10) "TestClass1"
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 2:12-2:22
      },
      Name: (string) (len=10) "TestClass1"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.FunctionCall)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) <nil>
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=39) "file:///../cases/variableAssignment.php",
            Range: (protocol.Range) 3:7-3:22
          },
          Name: (string) (len=13) "testFunction1"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 2:27-3:4
      },
      Name: (string) (len=5) "$var2"
    }
  }),
  (*analysis.FunctionCall)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 3:7-3:22
      },
      Name: (string) (len=13) "testFunction1"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.Variable)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "TestClass1",
                original: (string) (len=10) "TestClass1"
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=39) "file:///../cases/variableAssignment.php",
            Range: (protocol.Range) 4:7-4:12
          },
          Name: (string) (len=5) "$var1"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 3:25-4:4
      },
      Name: (string) (len=5) "$var3"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "TestClass1",
            original: (string) (len=10) "TestClass1"
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 4:7-4:12
      },
      Name: (string) (len=5) "$var1"
    }
  }),
  (*analysis.Variable)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.ScopedMethodAccess)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) <nil>
          },
          Scope: (*analysis.ClassAccess)({
            Expression: (analysis.Expression) {
              Type: (analysis.TypeComposite) {
                typeStrings: ([]analysis.TypeString) (len=1) {
                  (analysis.TypeString) {
                    fqn: (string) (len=10) "TestClass1",
                    original: (string) (len=10) "TestClass1"
                  }
                }
              },
              Scope: (analysis.HasTypes) <nil>,
              Location: (protocol.Location) {
                URI: (string) (len=39) "file:///../cases/variableAssignment.php",
                Range: (protocol.Range) 6:86-6:96
              },
              Name: (string) (len=10) "TestClass1"
            }
          }),
          Location: (protocol.Location) {
            URI: (string) (len=39) "file:///../cases/variableAssignment.php",
            Range: (protocol.Range) 6:98-6:105
          },
          Name: (string) (len=7) "method1"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 4:15-6:83
      },
      Name: (string) (len=5) "$var4"
    }
  }),
  (*analysis.ClassAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) (len=1) {
          (analysis.TypeString) {
            fqn: (string) (len=10) "TestClass1",
            original: (string) (len=10) "TestClass1"
          }
        }
      },
      Scope: (analysis.HasTypes) <nil>,
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 6:86-6:96
      },
      Name: (string) (len=10) "TestClass1"
    }
  }),
  (*analysis.ScopedMethodAccess)({
    Expression: (analysis.Expression) {
      Type: (analysis.TypeComposite) {
        typeStrings: ([]analysis.TypeString) <nil>
      },
      Scope: (*analysis.ClassAccess)({
        Expression: (analysis.Expression) {
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=10) "TestClass1",
                original: (string) (len=10) "TestClass1"
              }
            }
          },
          Scope: (analysis.HasTypes) <nil>,
          Location: (protocol.Location) {
            URI: (string) (len=39) "file:///../cases/variableAssignment.php",
            Range: (protocol.Range) 6:86-6:96
          },
          Name: (string) (len=10) "TestClass1"
        }
      }),
      Location: (protocol.Location) {
        URI: (string) (len=39) "file:///../cases/variableAssignment.php",
        Range: (protocol.Range) 6:98-6:105
      },
      Name: (string) (len=7) "method1"
    }
  })
}
