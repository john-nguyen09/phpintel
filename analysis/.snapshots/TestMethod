([]analysis.Symbol) (len=14) {
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 3:3-5:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod1",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 2,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 7:4-9:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod2",
      Params: ([]analysis.Parameter) (len=2) {
        (analysis.Parameter) {
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 7:35-7:46
          },
          Name: (string) (len=7) "$param1",
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) <nil>
          },
          Value: (string) ""
        },
        (analysis.Parameter) {
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 7:48-7:79
          },
          Name: (string) (len=7) "$param2",
          Type: (analysis.TypeComposite) {
            typeStrings: ([]analysis.TypeString) (len=1) {
              (analysis.TypeString) {
                fqn: (string) (len=23) "TestAbstractMethodClass",
                original: (string) (len=23) "TestAbstractMethodClass"
              }
            }
          },
          Value: (string) ""
        }
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 11:4-13:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod3",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 15:4-17:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod4",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 2,
    IsStatic: (bool) true,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 19:4-21:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod5",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) true,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 23:4-25:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod6",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) true,
    ClassModifier: (analysis.ClassModifierValue) 0
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 27:4-29:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod7",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 2,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 2
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 31:4-33:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod8",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 2
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 35:4-37:5
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=11) "testMethod9",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 2
  }),
  (*analysis.Class)({
    document: (*analysis.Document)({
      uri: (string) (len=27) "file:///../cases/method.php",
      text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
      lineOffsets: ([]int) (len=46) {
        (int) 0,
        (int) 8,
        (int) 9,
        (int) 35,
        (int) 73,
        (int) 74,
        (int) 82,
        (int) 83,
        (int) 168,
        (int) 169,
        (int) 177,
        (int) 178,
        (int) 216,
        (int) 217,
        (int) 225,
        (int) 226,
        (int) 272,
        (int) 273,
        (int) 281,
        (int) 282,
        (int) 330,
        (int) 331,
        (int) 339,
        (int) 340,
        (int) 385,
        (int) 386,
        (int) 394,
        (int) 395,
        (int) 440,
        (int) 441,
        (int) 449,
        (int) 450,
        (int) 497,
        (int) 498,
        (int) 506,
        (int) 507,
        (int) 551,
        (int) 552,
        (int) 560,
        (int) 563,
        (int) 564,
        (int) 607,
        (int) 654,
        (int) 703,
        (int) 767,
        (int) 0
      },
      variableTables: ([]analysis.variableTable) (len=13) {
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        }
      },
      Children: ([]analysis.Symbol) (len=14) {
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 3:3-5:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod1",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 7:4-9:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod2",
            Params: ([]analysis.Parameter) (len=2) {
              (analysis.Parameter) {
                location: (lsp.Location) {
                  URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                  Range: (lsp.Range) 7:35-7:46
                },
                Name: (string) (len=7) "$param1",
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) <nil>
                },
                Value: (string) ""
              },
              (analysis.Parameter) {
                location: (lsp.Location) {
                  URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                  Range: (lsp.Range) 7:48-7:79
                },
                Name: (string) (len=7) "$param2",
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) (len=1) {
                    (analysis.TypeString) {
                      fqn: (string) (len=23) "TestAbstractMethodClass",
                      original: (string) (len=23) "TestAbstractMethodClass"
                    }
                  }
                },
                Value: (string) ""
              }
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 11:4-13:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod3",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 15:4-17:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod4",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 19:4-21:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod5",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 23:4-25:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod6",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 27:4-29:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod7",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 31:4-33:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod8",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 35:4-37:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod9",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Class)(<already shown>),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 41:3-41:44
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod10",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 42:3-42:46
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod11",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 43:3-43:61
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod12",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Class)({
          document: (*analysis.Document)(<already shown>),
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 40:0-45:767
          },
          Modifier: (analysis.ClassModifierValue) 1,
          Name: (analysis.TypeString) {
            fqn: (string) (len=23) "TestAbstractMethodClass",
            original: (string) (len=23) "TestAbstractMethodClass"
          },
          Extends: (analysis.TypeString) {
            fqn: (string) "",
            original: (string) ""
          },
          Interfaces: ([]analysis.TypeString) <nil>
        })
      },
      classStack: ([]analysis.Symbol) (len=2) {
        (*analysis.Class)(<already shown>),
        (*analysis.Class)({
          document: (*analysis.Document)(<already shown>),
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 40:0-45:767
          },
          Modifier: (analysis.ClassModifierValue) 1,
          Name: (analysis.TypeString) {
            fqn: (string) (len=23) "TestAbstractMethodClass",
            original: (string) (len=23) "TestAbstractMethodClass"
          },
          Extends: (analysis.TypeString) {
            fqn: (string) "",
            original: (string) ""
          },
          Interfaces: ([]analysis.TypeString) <nil>
        })
      }
    }),
    location: (lsp.Location) {
      URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
      Range: (lsp.Range) 2:0-38:0
    },
    Modifier: (analysis.ClassModifierValue) 0,
    Name: (analysis.TypeString) {
      fqn: (string) (len=15) "TestMethodClass",
      original: (string) (len=15) "TestMethodClass"
    },
    Extends: (analysis.TypeString) {
      fqn: (string) "",
      original: (string) ""
    },
    Interfaces: ([]analysis.TypeString) <nil>
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 41:3-41:44
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=12) "testMethod10",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 2,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 1
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 42:3-42:46
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 43:3-43:61
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod12",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=12) "testMethod11",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 1,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 1
  }),
  (*analysis.Method)({
    Function: (analysis.Function) {
      location: (lsp.Location) {
        URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
        Range: (lsp.Range) 43:3-43:61
      },
      document: (*analysis.Document)({
        uri: (string) (len=27) "file:///../cases/method.php",
        text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
        lineOffsets: ([]int) (len=46) {
          (int) 0,
          (int) 8,
          (int) 9,
          (int) 35,
          (int) 73,
          (int) 74,
          (int) 82,
          (int) 83,
          (int) 168,
          (int) 169,
          (int) 177,
          (int) 178,
          (int) 216,
          (int) 217,
          (int) 225,
          (int) 226,
          (int) 272,
          (int) 273,
          (int) 281,
          (int) 282,
          (int) 330,
          (int) 331,
          (int) 339,
          (int) 340,
          (int) 385,
          (int) 386,
          (int) 394,
          (int) 395,
          (int) 440,
          (int) 441,
          (int) 449,
          (int) 450,
          (int) 497,
          (int) 498,
          (int) 506,
          (int) 507,
          (int) 551,
          (int) 552,
          (int) 560,
          (int) 563,
          (int) 564,
          (int) 607,
          (int) 654,
          (int) 703,
          (int) 767,
          (int) 0
        },
        variableTables: ([]analysis.variableTable) (len=13) {
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          },
          (analysis.variableTable) {
          }
        },
        Children: ([]analysis.Symbol) (len=14) {
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 3:3-5:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod1",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 7:4-9:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod2",
              Params: ([]analysis.Parameter) (len=2) {
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:35-7:46
                  },
                  Name: (string) (len=7) "$param1",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) <nil>
                  },
                  Value: (string) ""
                },
                (analysis.Parameter) {
                  location: (lsp.Location) {
                    URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                    Range: (lsp.Range) 7:48-7:79
                  },
                  Name: (string) (len=7) "$param2",
                  Type: (analysis.TypeComposite) {
                    typeStrings: ([]analysis.TypeString) (len=1) {
                      (analysis.TypeString) {
                        fqn: (string) (len=23) "TestAbstractMethodClass",
                        original: (string) (len=23) "TestAbstractMethodClass"
                      }
                    }
                  },
                  Value: (string) ""
                }
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 11:4-13:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod3",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 15:4-17:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod4",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 19:4-21:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod5",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 23:4-25:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod6",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) true,
            ClassModifier: (analysis.ClassModifierValue) 0
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 27:4-29:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod7",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 31:4-33:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod8",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 35:4-37:5
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=11) "testMethod9",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 0,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 2
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 41:3-41:44
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod10",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 2,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)({
            Function: (analysis.Function) {
              location: (lsp.Location) {
                URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                Range: (lsp.Range) 42:3-42:46
              },
              document: (*analysis.Document)(<already shown>),
              Name: (string) (len=12) "testMethod11",
              Params: ([]analysis.Parameter) {
              }
            },
            VisibilityModifier: (analysis.VisibilityModifierValue) 1,
            IsStatic: (bool) false,
            ClassModifier: (analysis.ClassModifierValue) 1
          }),
          (*analysis.Method)(<already shown>),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        },
        classStack: ([]analysis.Symbol) (len=2) {
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 2:0-38:0
            },
            Modifier: (analysis.ClassModifierValue) 0,
            Name: (analysis.TypeString) {
              fqn: (string) (len=15) "TestMethodClass",
              original: (string) (len=15) "TestMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          }),
          (*analysis.Class)({
            document: (*analysis.Document)(<already shown>),
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 40:0-45:767
            },
            Modifier: (analysis.ClassModifierValue) 1,
            Name: (analysis.TypeString) {
              fqn: (string) (len=23) "TestAbstractMethodClass",
              original: (string) (len=23) "TestAbstractMethodClass"
            },
            Extends: (analysis.TypeString) {
              fqn: (string) "",
              original: (string) ""
            },
            Interfaces: ([]analysis.TypeString) <nil>
          })
        }
      }),
      Name: (string) (len=12) "testMethod12",
      Params: ([]analysis.Parameter) {
      }
    },
    VisibilityModifier: (analysis.VisibilityModifierValue) 0,
    IsStatic: (bool) false,
    ClassModifier: (analysis.ClassModifierValue) 1
  }),
  (*analysis.Class)({
    document: (*analysis.Document)({
      uri: (string) (len=27) "file:///../cases/method.php",
      text: (string) (len=769) "<?php\r\n\r\nclass TestMethodClass {\r\n    private function testMethod1() {\r\n\r\n    }\r\n\r\n    protected function testMethod2($param1 = 0, TestAbstractMethodClass $param2) {\r\n\r\n    }\r\n\r\n    public function testMethod3() {\r\n\r\n    }\r\n\r\n    private static function testMethod4() {\r\n\r\n    }\r\n\r\n    protected static function testMethod5() {\r\n\r\n    }\r\n\r\n    public static function testMethod6() {\r\n\r\n    }\r\n\r\n    private final function testMethod7() {\r\n\r\n    }\r\n\r\n    protected final function testMethod8() {\r\n\r\n    }\r\n\r\n    public final function testMethod9() {\r\n\r\n    }\r\n}\r\n\r\nabstract class TestAbstractMethodClass {\r\n    private abstract function testMethod10();\r\n    protected abstract function testMethod11();\r\n    public abstract function testMethod12() : TestMethodClass;\r\n}\r\n",
      lineOffsets: ([]int) (len=46) {
        (int) 0,
        (int) 8,
        (int) 9,
        (int) 35,
        (int) 73,
        (int) 74,
        (int) 82,
        (int) 83,
        (int) 168,
        (int) 169,
        (int) 177,
        (int) 178,
        (int) 216,
        (int) 217,
        (int) 225,
        (int) 226,
        (int) 272,
        (int) 273,
        (int) 281,
        (int) 282,
        (int) 330,
        (int) 331,
        (int) 339,
        (int) 340,
        (int) 385,
        (int) 386,
        (int) 394,
        (int) 395,
        (int) 440,
        (int) 441,
        (int) 449,
        (int) 450,
        (int) 497,
        (int) 498,
        (int) 506,
        (int) 507,
        (int) 551,
        (int) 552,
        (int) 560,
        (int) 563,
        (int) 564,
        (int) 607,
        (int) 654,
        (int) 703,
        (int) 767,
        (int) 0
      },
      variableTables: ([]analysis.variableTable) (len=13) {
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        },
        (analysis.variableTable) {
        }
      },
      Children: ([]analysis.Symbol) (len=14) {
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 3:3-5:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod1",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 7:4-9:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod2",
            Params: ([]analysis.Parameter) (len=2) {
              (analysis.Parameter) {
                location: (lsp.Location) {
                  URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                  Range: (lsp.Range) 7:35-7:46
                },
                Name: (string) (len=7) "$param1",
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) <nil>
                },
                Value: (string) ""
              },
              (analysis.Parameter) {
                location: (lsp.Location) {
                  URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
                  Range: (lsp.Range) 7:48-7:79
                },
                Name: (string) (len=7) "$param2",
                Type: (analysis.TypeComposite) {
                  typeStrings: ([]analysis.TypeString) (len=1) {
                    (analysis.TypeString) {
                      fqn: (string) (len=23) "TestAbstractMethodClass",
                      original: (string) (len=23) "TestAbstractMethodClass"
                    }
                  }
                },
                Value: (string) ""
              }
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 11:4-13:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod3",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 15:4-17:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod4",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 19:4-21:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod5",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 23:4-25:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod6",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) true,
          ClassModifier: (analysis.ClassModifierValue) 0
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 27:4-29:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod7",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 31:4-33:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod8",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 35:4-37:5
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=11) "testMethod9",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 2
        }),
        (*analysis.Class)({
          document: (*analysis.Document)(<already shown>),
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 2:0-38:0
          },
          Modifier: (analysis.ClassModifierValue) 0,
          Name: (analysis.TypeString) {
            fqn: (string) (len=15) "TestMethodClass",
            original: (string) (len=15) "TestMethodClass"
          },
          Extends: (analysis.TypeString) {
            fqn: (string) "",
            original: (string) ""
          },
          Interfaces: ([]analysis.TypeString) <nil>
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 41:3-41:44
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod10",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 2,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 42:3-42:46
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod11",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 1,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Method)({
          Function: (analysis.Function) {
            location: (lsp.Location) {
              URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
              Range: (lsp.Range) 43:3-43:61
            },
            document: (*analysis.Document)(<already shown>),
            Name: (string) (len=12) "testMethod12",
            Params: ([]analysis.Parameter) {
            }
          },
          VisibilityModifier: (analysis.VisibilityModifierValue) 0,
          IsStatic: (bool) false,
          ClassModifier: (analysis.ClassModifierValue) 1
        }),
        (*analysis.Class)(<already shown>)
      },
      classStack: ([]analysis.Symbol) (len=2) {
        (*analysis.Class)({
          document: (*analysis.Document)(<already shown>),
          location: (lsp.Location) {
            URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
            Range: (lsp.Range) 2:0-38:0
          },
          Modifier: (analysis.ClassModifierValue) 0,
          Name: (analysis.TypeString) {
            fqn: (string) (len=15) "TestMethodClass",
            original: (string) (len=15) "TestMethodClass"
          },
          Extends: (analysis.TypeString) {
            fqn: (string) "",
            original: (string) ""
          },
          Interfaces: ([]analysis.TypeString) <nil>
        }),
        (*analysis.Class)(<already shown>)
      }
    }),
    location: (lsp.Location) {
      URI: (lsp.DocumentURI) (len=27) "file:///../cases/method.php",
      Range: (lsp.Range) 40:0-45:767
    },
    Modifier: (analysis.ClassModifierValue) 1,
    Name: (analysis.TypeString) {
      fqn: (string) (len=23) "TestAbstractMethodClass",
      original: (string) (len=23) "TestAbstractMethodClass"
    },
    Extends: (analysis.TypeString) {
      fqn: (string) "",
      original: (string) ""
    },
    Interfaces: ([]analysis.TypeString) <nil>
  })
}
